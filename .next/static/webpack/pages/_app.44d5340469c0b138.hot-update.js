"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./context/apiCall.js":
/*!****************************!*\
  !*** ./context/apiCall.js ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiCallProvider: function() { return /* binding */ ApiCallProvider; },\n/* harmony export */   useApiCall: function() { return /* binding */ useApiCall; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-hot-toast */ \"./node_modules/react-hot-toast/dist/index.mjs\");\n/* harmony import */ var _utils_supabase__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/supabase */ \"./utils/supabase.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _utils_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/constants */ \"./utils/constants.js\");\n/* harmony import */ var _utils_helper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/helper */ \"./utils/helper.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/navigation */ \"./node_modules/next/navigation.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_navigation__WEBPACK_IMPORTED_MODULE_7__);\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n\n\n\n\nconst ApiCallContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nconst useApiCall = ()=>{\n    _s();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ApiCallContext);\n};\n_s(useApiCall, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst ApiCallProvider = (param)=>{\n    let { children } = param;\n    _s1();\n    const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_7__.usePathname)();\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_4__.useRouter)();\n    const [mainData, setMainData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        topCompanyProfile: {\n            data: [],\n            isLoading: true\n        },\n        allCompanyProfile: {\n            data: [],\n            isLoading: true\n        },\n        topJobPost: {\n            data: [],\n            isLoading: true\n        },\n        allJobPost: {\n            data: [],\n            isLoading: true\n        },\n        allChannel: {\n            data: [],\n            isLoading: true\n        },\n        user: {\n            data: null,\n            isLoading: true\n        },\n        profile: {\n            data: null,\n            isLoading: true\n        },\n        notification: {\n            data: [],\n            isLoading: true\n        },\n        jobPost: {\n            data: [],\n            isLoading: true\n        },\n        companyProfile: {\n            data: [],\n            isLoading: true\n        },\n        resume: {\n            data: [],\n            isLoading: true\n        },\n        application: {\n            data: [],\n            isLoading: true\n        },\n        channel: {\n            data: [],\n            isLoading: true\n        }\n    });\n    const resetData = ()=>{\n        setMainData({\n            ...mainData,\n            user: {\n                data: null,\n                isLoading: true\n            },\n            profile: {\n                data: null,\n                isLoading: true\n            },\n            notification: {\n                data: [],\n                isLoading: true\n            },\n            jobPost: {\n                data: [],\n                isLoading: true\n            },\n            companyProfile: {\n                data: [],\n                isLoading: true\n            },\n            resume: {\n                data: [],\n                isLoading: true\n            },\n            application: {\n                data: [],\n                isLoading: true\n            }\n        });\n    };\n    const getUserApi = async ()=>{\n        try {\n            const { data, error } = await _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.auth.getUser();\n            if (error) {\n                throw error;\n            }\n            if (data === null || data === void 0 ? void 0 : data.user) {\n                setMainData((prevData)=>({\n                        ...prevData,\n                        user: {\n                            data: data === null || data === void 0 ? void 0 : data.user,\n                            isLoading: false\n                        }\n                    }));\n            }\n            var _data_user;\n            return (_data_user = data === null || data === void 0 ? void 0 : data.user) !== null && _data_user !== void 0 ? _data_user : null;\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const getProfileApi = async ()=>{\n        try {\n            var _mainData_user_data;\n            const { data, error } = await _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"profile\").select(\"*, role (role_type)\").single().eq(\"user_uuid\", (_mainData_user_data = mainData.user.data) === null || _mainData_user_data === void 0 ? void 0 : _mainData_user_data.id);\n            setMainData((prevData)=>({\n                    ...prevData,\n                    profile: {\n                        data: data,\n                        isLoading: false\n                    }\n                }));\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const updateProfileApi = async (param)=>{\n        let { postData } = param;\n        try {\n            var _mainData_user_data;\n            const { data, error } = await _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"profile\").update({\n                username: postData.username,\n                full_name: postData.full_name\n            }).eq(\"user_uuid\", (_mainData_user_data = mainData.user.data) === null || _mainData_user_data === void 0 ? void 0 : _mainData_user_data.id).select().single();\n            if (error) {\n                throw error;\n            }\n            setMainData((prevData)=>({\n                    ...prevData,\n                    profile: {\n                        data: data,\n                        isLoading: false\n                    }\n                }));\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].success(\"Updated!\");\n            return data;\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n        }\n    };\n    const updateOnboardingApi = async (param)=>{\n        let { postData } = param;\n        try {\n            var _mainData_user_data;\n            const { data, error } = await _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"profile\").update({\n                onboarding: postData.onboarding\n            }).eq(\"user_uuid\", (_mainData_user_data = mainData.user.data) === null || _mainData_user_data === void 0 ? void 0 : _mainData_user_data.id).select().single();\n            if (error) {\n                throw error;\n            }\n            setMainData((prevData)=>({\n                    ...prevData,\n                    profile: {\n                        data: data,\n                        isLoading: false\n                    }\n                }));\n            return data;\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n        }\n    };\n    const updateAccountTypeApi = async (param)=>{\n        let { postData } = param;\n        try {\n            var _mainData_user_data;\n            const { data, error } = await _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"profile\").update({\n                account_type: postData.accountType\n            }).eq(\"user_uuid\", (_mainData_user_data = mainData.user.data) === null || _mainData_user_data === void 0 ? void 0 : _mainData_user_data.id).select().single();\n            if (error) {\n                throw error;\n            }\n            setMainData((prevData)=>({\n                    ...prevData,\n                    profile: {\n                        data: data,\n                        isLoading: false\n                    }\n                }));\n            return data;\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n        }\n    };\n    const updateProductTourApi = async (param)=>{\n        let { postData } = param;\n        try {\n            var _mainData_user_data;\n            const { data, error } = await _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"profile\").update({\n                product_tour: postData.productTour\n            }).eq(\"user_uuid\", (_mainData_user_data = mainData.user.data) === null || _mainData_user_data === void 0 ? void 0 : _mainData_user_data.id).select().single();\n            if (error) {\n                throw error;\n            }\n            setMainData((prevData)=>({\n                    ...prevData,\n                    profile: {\n                        data: data,\n                        isLoading: false\n                    }\n                }));\n            return data;\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n        }\n    };\n    const getNotificationApi = async ()=>{\n        try {\n            var _mainData_user_data;\n            const { data, error } = await _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"notification\").select(\"*\").eq(\"user_uuid\", (_mainData_user_data = mainData.user.data) === null || _mainData_user_data === void 0 ? void 0 : _mainData_user_data.id).order(\"id\", {\n                ascending: false\n            });\n            if (error) {\n                throw error;\n            }\n            setMainData((prevData)=>({\n                    ...prevData,\n                    notification: {\n                        data: data,\n                        isLoading: false\n                    }\n                }));\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n        }\n    };\n    const addNotificationApi = async (postData)=>{\n        try {\n            var _mainData_user_data;\n            const response = await fetch(\"/api/notification/add-notification\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    postData: {\n                        ...postData\n                    },\n                    user_uuid: (postData === null || postData === void 0 ? void 0 : postData.user_uuid) ? postData.user_uuid : (_mainData_user_data = mainData.user.data) === null || _mainData_user_data === void 0 ? void 0 : _mainData_user_data.id\n                })\n            });\n            if (response.ok) {\n                const responseData = await response.json();\n                if (responseData) {\n                    var _mainData_user_data1;\n                    const data = responseData.data;\n                    if (data && data.user_uuid == ((_mainData_user_data1 = mainData.user.data) === null || _mainData_user_data1 === void 0 ? void 0 : _mainData_user_data1.id)) {\n                        mainData.notification.data.unshift(data);\n                    }\n                }\n            } else {\n                const error = await response.json();\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n            }\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(\"An error occurred while processing the request\");\n        }\n    };\n    const updateNotificationApi = async (postData)=>{\n        try {\n            const { data, error } = await _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"notification\").update({\n                is_read: true\n            }).eq(\"id\", postData === null || postData === void 0 ? void 0 : postData.id).select().single();\n            if (error) {\n                throw error;\n            }\n            const currentNotifications = mainData.notification.data;\n            if (currentNotifications.length !== 0) {\n                const indexToReplace = currentNotifications.findIndex((obj)=>obj.id === data.id);\n                const newNotifications = [\n                    ...currentNotifications.slice(0, indexToReplace),\n                    data,\n                    ...currentNotifications.slice(indexToReplace + 1)\n                ];\n                setMainData((prevData)=>({\n                        ...prevData,\n                        notification: {\n                            data: newNotifications,\n                            isLoading: false\n                        }\n                    }));\n            }\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n        }\n    };\n    const getJobPostApi = async ()=>{\n        try {\n            var _mainData_user_data;\n            const response = await fetch(\"/api/job-post/get-post\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    user_uuid: (_mainData_user_data = mainData.user.data) === null || _mainData_user_data === void 0 ? void 0 : _mainData_user_data.id\n                })\n            });\n            if (response.ok) {\n                const responseData = await response.json();\n                if (responseData) {\n                    const data = responseData.data;\n                    setMainData((prevData)=>({\n                            ...prevData,\n                            jobPost: {\n                                data: data,\n                                isLoading: false\n                            }\n                        }));\n                }\n            } else {\n                const error = await response.json();\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n            }\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(\"An error occurred while processing the request\");\n        }\n    };\n    const addJobPostApi = async (postData)=>{\n        try {\n            var _mainData_user_data;\n            const response = await fetch(\"/api/job-post/add-post\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    postData: {\n                        ...postData\n                    },\n                    user_uuid: (_mainData_user_data = mainData.user.data) === null || _mainData_user_data === void 0 ? void 0 : _mainData_user_data.id\n                })\n            });\n            if (response.ok) {\n                const responseData = await response.json();\n                if (responseData) {\n                    const data = responseData.data;\n                    mainData.jobPost.data.unshift(data);\n                    return data;\n                }\n            } else {\n                const error = await response.json();\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n            }\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(\"An error occurred while processing the request\");\n        }\n    };\n    const editJobPostApi = async (param)=>{\n        let { postData, id } = param;\n        try {\n            const response = await fetch(\"/api/job-post/edit-post\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    postData: {\n                        ...postData\n                    },\n                    postId: id\n                })\n            });\n            if (response.ok) {\n                const responseData = await response.json();\n                if (responseData) {\n                    const data = responseData.data;\n                    const currentData = mainData.jobPost.data;\n                    const indexToReplace = currentData.findIndex((obj)=>obj.id === data.id);\n                    const newData = [\n                        ...currentData.slice(0, indexToReplace),\n                        data,\n                        ...currentData.slice(indexToReplace + 1)\n                    ];\n                    setMainData((prevData)=>({\n                            ...prevData,\n                            jobPost: {\n                                data: newData,\n                                isLoading: false\n                            }\n                        }));\n                    return data;\n                }\n            } else {\n                const error = await response.json();\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n            }\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(\"An error occurred while processing the request\");\n        }\n    };\n    const deleteJobPostApi = async (postData)=>{\n        try {\n            const { data, error } = await _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"job_post\").delete().eq(\"id\", postData.id).select().single();\n            if (error) {\n                throw error;\n            }\n            if (data) {\n                const currentJobs = mainData.jobPost.data;\n                const newJobs = currentJobs.filter((job)=>job.id !== data.id);\n                setMainData((prevData)=>({\n                        ...prevData,\n                        jobPost: {\n                            data: newJobs,\n                            isLoading: false\n                        }\n                    }));\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].success(\"Deleted!\");\n                return data;\n            }\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n        }\n    };\n    const publishJobPostApi = async (postData)=>{\n        try {\n            const response = await fetch(\"/api/job-post/publish\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(postData)\n            });\n            if (response.ok) {\n                const responseData = await response.json();\n                if (responseData) {\n                    const currentData = mainData.jobPost.data;\n                    const returnData = responseData.data;\n                    function findAndReplace(data, returnData) {\n                        for(let i = 0; i < data.length; i++){\n                            if (data[i].id == returnData.job_post_id) {\n                                data[i].job_post_validity = returnData;\n                                break;\n                            }\n                        }\n                        return data;\n                    }\n                    const newData = findAndReplace(currentData, returnData);\n                    setMainData((prevData)=>({\n                            ...prevData,\n                            jobPost: {\n                                data: newData,\n                                isLoading: false\n                            }\n                        }));\n                    return responseData;\n                }\n            } else {\n                const error = await response.json();\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n            }\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(\"An error occurred while processing the request\");\n        }\n    };\n    // const deleteChannelPostApi = async (postData) => {\n    //   try {\n    //     const idsToDelete = postData.channel_post.map((item) => item.id);\n    //     const { data, error } = await supabase\n    //       .from('job_post_send_que')\n    //       .delete()\n    //       .in('id', idsToDelete) // bulk delete (array)\n    //       .select();\n    //     if (error) {\n    //       throw error;\n    //     }\n    //     return data;\n    //   } catch (error) {\n    //     toast.error(error.message);\n    //   }\n    // };\n    const getResumeApi = async ()=>{\n        try {\n            var _mainData_user_data;\n            const { data, error } = await _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"resume\").select(\"*\").eq(\"user_uuid\", (_mainData_user_data = mainData.user.data) === null || _mainData_user_data === void 0 ? void 0 : _mainData_user_data.id);\n            if (error) {\n                throw error;\n            }\n            setMainData((prevData)=>({\n                    ...prevData,\n                    resume: {\n                        data: data.length > 0 ? data[0] : [],\n                        isLoading: false\n                    }\n                }));\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const addResumeApi = async (param)=>{\n        let { postData } = param;\n        try {\n            var _mainData_user_data;\n            let dataToUpdate = {\n                ...postData,\n                user_uuid: (_mainData_user_data = mainData.user.data) === null || _mainData_user_data === void 0 ? void 0 : _mainData_user_data.id\n            };\n            if (!postData.uid) {\n                dataToUpdate.uid = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_6__.generateUniqueID)();\n            }\n            const { data, error } = await _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"resume\").upsert(dataToUpdate, {\n                onConflict: \"user_uuid\"\n            }).select().single();\n            if (error) {\n                throw error;\n            }\n            setMainData((prevData)=>({\n                    ...prevData,\n                    resume: {\n                        data: data,\n                        isLoading: false\n                    }\n                }));\n            return data;\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n        }\n    };\n    const getCompanyProfileApi = async ()=>{\n        try {\n            var _mainData_user_data;\n            const { data, error } = await _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"company_profile\").select(\"*\").eq(\"user_uuid\", (_mainData_user_data = mainData.user.data) === null || _mainData_user_data === void 0 ? void 0 : _mainData_user_data.id);\n            if (error) {\n                throw error;\n            }\n            setMainData((prevData)=>({\n                    ...prevData,\n                    companyProfile: {\n                        data: data.length > 0 ? data[0] : [],\n                        isLoading: false\n                    }\n                }));\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n        }\n    };\n    const addCompanyProfileApi = async (param)=>{\n        let { postData } = param;\n        try {\n            var _mainData_user_data;\n            let dataToUpdate = {\n                ...postData,\n                user_uuid: (_mainData_user_data = mainData.user.data) === null || _mainData_user_data === void 0 ? void 0 : _mainData_user_data.id\n            };\n            if (!postData.uid) {\n                dataToUpdate.uid = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_6__.generateUniqueID)();\n            }\n            const { data, error } = await _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"company_profile\").upsert(dataToUpdate, {\n                onConflict: \"user_uuid\"\n            }).select().single();\n            if (error) {\n                throw error;\n            }\n            if (data) {\n                setMainData((prevData)=>({\n                        ...prevData,\n                        companyProfile: {\n                            data: data,\n                            isLoading: false\n                        }\n                    }));\n            }\n            return data;\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n        }\n    };\n    const getApplicationApi = async ()=>{\n        try {\n            var _mainData_user_data;\n            const { data, error } = await _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"application\").select(\"*, job_post (*, company_profile (*))\").eq(\"user_uuid\", (_mainData_user_data = mainData.user.data) === null || _mainData_user_data === void 0 ? void 0 : _mainData_user_data.id).order(\"id\", {\n                ascending: false\n            });\n            if (error) {\n                throw error;\n            }\n            setMainData((prevData)=>({\n                    ...prevData,\n                    application: {\n                        data: data,\n                        isLoading: false\n                    }\n                }));\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n        }\n    };\n    const getChannelApi = async ()=>{\n        try {\n            var _mainData_user_data;\n            const { data, error } = await _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"channel\").select(\"*\").eq(\"user_uuid\", (_mainData_user_data = mainData.user.data) === null || _mainData_user_data === void 0 ? void 0 : _mainData_user_data.id).order(\"id\", {\n                ascending: true\n            });\n            if (error) {\n                throw error;\n            }\n            setMainData((prevData)=>({\n                    ...prevData,\n                    channel: {\n                        data: data,\n                        isLoading: false\n                    }\n                }));\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n        }\n    };\n    const applyJobPostApi = async (param)=>{\n        let { postData } = param;\n        try {\n            var _mainData_user_data;\n            const { data, error } = await _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"application\").select(\"*, job_post (*, company_profile (*))\").eq(\"job_post_id\", postData.job_post_id).eq(\"user_uuid\", (_mainData_user_data = mainData.user.data) === null || _mainData_user_data === void 0 ? void 0 : _mainData_user_data.id);\n            if (error) {\n                throw error;\n            }\n            if (data.length == 0) {\n                var _mainData_user_data1;\n                const { data, error } = await _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"application\").insert({\n                    ...postData,\n                    user_uuid: (_mainData_user_data1 = mainData.user.data) === null || _mainData_user_data1 === void 0 ? void 0 : _mainData_user_data1.id\n                }).select().single();\n                if (error) {\n                    throw error;\n                }\n                if (data) {\n                    mainData.application.data.unshift(data);\n                }\n                return data;\n            }\n            if (data.length > 0) {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(\"Application already submitted!\");\n            }\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n        }\n    };\n    const editApplicationApi = async (param)=>{\n        let { postData, id } = param;\n        try {\n            const response = await fetch(\"/api/application/update-status\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    postData: {\n                        ...postData\n                    },\n                    postId: id\n                })\n            });\n            if (response.ok) {\n                const responseData = await response.json();\n                if (responseData) {\n                    const data = responseData.data;\n                    return data.length > 0 ? data[0] : [];\n                }\n            } else {\n                const error = await response.json();\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n            }\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(\"An error occurred while processing the request\");\n        }\n    };\n    const getTopJobPostApi = async (param)=>{\n        let { limit: limit } = param;\n        setMainData((prevData)=>({\n                ...prevData,\n                topJobPost: {\n                    ...prevData.topJobPost,\n                    isLoading: true\n                }\n            }));\n        try {\n            let query = _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"job_post\").select(\"*, job_post_validity!inner(*), company_profile (*)\").eq(\"job_post_validity.is_published\", true).order(\"id\", {\n                ascending: false\n            });\n            if (limit) {\n                query = query.limit(limit);\n            }\n            const { data, error } = await query;\n            if (error) {\n                throw error;\n            }\n            setMainData((prevData)=>({\n                    ...prevData,\n                    topJobPost: {\n                        data: data,\n                        isLoading: false\n                    }\n                }));\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n            setMainData((prevData)=>({\n                    ...prevData,\n                    topJobPost: {\n                        ...prevData.topJobPost,\n                        isLoading: false\n                    }\n                }));\n        }\n    };\n    const getAllJobPostApi = async (param)=>{\n        let { jobFilter: jobFilter, from: from, to: to } = param;\n        setMainData((prevData)=>({\n                ...prevData,\n                allJobPost: {\n                    ...prevData.allJobPost,\n                    isLoading: true\n                }\n            }));\n        try {\n            let query = _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"job_post\").select(\"*, job_post_validity!inner(*), company_profile (*)\").eq(\"job_post_validity.is_published\", true).range(from, to).order(\"id\", {\n                ascending: false\n            });\n            if (jobFilter === null || jobFilter === void 0 ? void 0 : jobFilter.keyword) {\n                query = query.textSearch(\"summary\", jobFilter.keyword, {\n                    type: \"websearch\",\n                    config: \"english\"\n                });\n            }\n            if (jobFilter === null || jobFilter === void 0 ? void 0 : jobFilter.type) {\n                query = query.eq(\"employment_type\", jobFilter.type);\n            }\n            if (jobFilter === null || jobFilter === void 0 ? void 0 : jobFilter.minSalary) {\n                query = query.gte(\"min_salary\", jobFilter.minSalary);\n            }\n            if (jobFilter === null || jobFilter === void 0 ? void 0 : jobFilter.maxSalary) {\n                query = query.lte(\"max_salary\", jobFilter.maxSalary);\n            }\n            const { data, error } = await query;\n            if (error) {\n                throw error;\n            }\n            setMainData((prevData)=>({\n                    ...prevData,\n                    allJobPost: {\n                        data: data,\n                        isLoading: false\n                    }\n                }));\n            return data;\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n            setMainData((prevData)=>({\n                    ...prevData,\n                    allJobPost: {\n                        ...prevData.allJobPost,\n                        isLoading: false\n                    }\n                }));\n        }\n    };\n    const getJobDetailsApi = async (postData)=>{\n        try {\n            const { data, error } = await _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"job_post\").select(\"*, job_post_validity!inner(*), company_profile (*)\").eq(\"job_post_validity.is_published\", true).eq(\"uid\", postData.job_uid);\n            if (error) {\n                throw error;\n            }\n            return data.length > 0 ? data[0] : null;\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n        }\n    };\n    const getResumeDetailsApi = async (postData)=>{\n        try {\n            const response = await fetch(\"/api/profile/get-resume\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    uid: postData.uid\n                })\n            });\n            if (response.ok) {\n                const responseData = await response.json();\n                if (responseData) {\n                    const data = responseData.data;\n                    return data.length > 0 ? data[0] : null;\n                }\n            } else {\n                const error = await response.json();\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n            }\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(\"An error occurred while processing the request\");\n        }\n    };\n    const getSingleCompanyProfileApi = async (postData)=>{\n        try {\n            const response = await fetch(\"/api/profile/get-company-profile\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    uid: postData.uid\n                })\n            });\n            if (response.ok) {\n                const responseData = await response.json();\n                if (responseData) {\n                    const data = responseData.data;\n                    return data.length > 0 ? data[0] : null;\n                }\n            } else {\n                const error = await response.json();\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n            }\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(\"An error occurred while processing the request\");\n        }\n    };\n    const updatePasswordApi = async (param)=>{\n        let { postData } = param;\n        try {\n            const { data, error } = await _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.auth.updateUser({\n                password: postData.new_password\n            });\n            if (error) {\n                throw error;\n            }\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].success(\"Password changed!\");\n            return data;\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n        }\n    };\n    const deleteAccountApi = async (postData)=>{\n        try {\n            var _mainData_user_data;\n            const { data, error } = await _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"account_deletion\").insert({\n                ...postData,\n                user_uuid: (_mainData_user_data = mainData.user.data) === null || _mainData_user_data === void 0 ? void 0 : _mainData_user_data.id\n            }).select();\n            if (error) {\n                throw error;\n            }\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].success(\"Account deleted!\");\n            return data;\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n        }\n    };\n    const getAllChannelApi = async ()=>{\n        try {\n            const { data, error } = await _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"channel\").select(\"*\").eq(\"is_active\", true).order(\"id\", {\n                ascending: true\n            });\n            if (error) {\n                throw error;\n            }\n            setMainData((prevData)=>({\n                    ...prevData,\n                    allChannel: {\n                        data: data,\n                        isLoading: false\n                    }\n                }));\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n        }\n    };\n    const getTopCompanyApi = async (param)=>{\n        let { limit: limit } = param;\n        setMainData((prevData)=>({\n                ...prevData,\n                topCompanyProfile: {\n                    ...prevData.topCompanyProfile,\n                    isLoading: true\n                }\n            }));\n        try {\n            let query = _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"company_profile\").select(\"*, job_post (*)\").order(\"id\", {\n                ascending: false\n            });\n            if (limit) {\n                query = query.limit(limit);\n            }\n            const { data, error } = await query;\n            if (error) {\n                throw error;\n            }\n            setMainData((prevData)=>({\n                    ...prevData,\n                    topCompanyProfile: {\n                        data: data,\n                        isLoading: false\n                    }\n                }));\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n            setMainData((prevData)=>({\n                    ...prevData,\n                    topCompanyProfile: {\n                        ...prevData.topCompanyProfile,\n                        isLoading: false\n                    }\n                }));\n        }\n    };\n    const getAllCompanyApi = async (limit)=>{\n        try {\n            let query = _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"company_profile\").select(\"*, job_post (*)\").order(\"id\", {\n                ascending: false\n            });\n            if (limit) {\n                query = query.limit(limit);\n            }\n            const { data, error } = await query;\n            if (error) {\n                throw error;\n            }\n            setMainData((prevData)=>({\n                    ...prevData,\n                    allCompanyProfile: {\n                        data: data,\n                        isLoading: false\n                    }\n                }));\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n        }\n    };\n    const addJobAlertApi = async (postData)=>{\n        try {\n            const { data, error } = await _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"job_alert\").insert({\n                ...postData\n            });\n            if (error) {\n                if (error.code === \"23505\") {\n                    react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(\"Email already exists.\");\n                    return null;\n                } else {\n                    throw error;\n                }\n            }\n            return true;\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n        }\n    };\n    const createStripeCustomerApi = async (postData)=>{\n        try {\n            var _mainData_user_data;\n            const response = await fetch(\"/api/stripe/create-customer\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    ...postData,\n                    email: mainData.profile.email,\n                    user_uuid: (_mainData_user_data = mainData.user.data) === null || _mainData_user_data === void 0 ? void 0 : _mainData_user_data.id\n                })\n            });\n            if (response.ok) {\n                const responseData = await response.json();\n                if (responseData) {\n                    return responseData;\n                }\n            } else {\n                const error = await response.json();\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n            }\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(\"An error occurred while processing the request\");\n        }\n    };\n    const createStripeCheckoutSessionApi = async (postData)=>{\n        try {\n            var _mainData_user_data;\n            const response = await fetch(\"/api/stripe/create-checkout-session\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    ...postData,\n                    user_uuid: (_mainData_user_data = mainData.user.data) === null || _mainData_user_data === void 0 ? void 0 : _mainData_user_data.id\n                })\n            });\n            if (response.ok) {\n                const responseData = await response.json();\n                if (responseData) {\n                    return responseData;\n                }\n            } else {\n                const error = await response.json();\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n            }\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(\"An error occurred while processing the request\");\n        }\n    };\n    const promiseAllApi = async ()=>{\n        await Promise.all([\n            getProfileApi(),\n            getNotificationApi(),\n            getJobPostApi(),\n            getResumeApi(),\n            getCompanyProfileApi(),\n            getApplicationApi(),\n            getChannelApi()\n        ]);\n    };\n    const promiseAllPublicApi = async ()=>{\n        await Promise.all([\n            getTopJobPostApi({\n                limit: 3\n            }),\n            getTopCompanyApi({\n                limit: 3\n            }),\n            getAllCompanyApi(),\n            getAllChannelApi()\n        ]);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const innitialFetch = async ()=>{\n            if (mainData.user.data == null) {\n                const userData = await getUserApi();\n                if (!userData) {\n                    const isAuthPage = Object.values(_utils_constants__WEBPACK_IMPORTED_MODULE_5__.PAGES).some((page)=>(page === null || page === void 0 ? void 0 : page.directory) === pathname && (page === null || page === void 0 ? void 0 : page.isAuth));\n                    if (isAuthPage) {\n                        react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(\"Please login to continue.\", {\n                            duration: 3000\n                        });\n                        router.push(_utils_constants__WEBPACK_IMPORTED_MODULE_5__.PAGES.home.directory);\n                    }\n                }\n            }\n        };\n        innitialFetch();\n    }, [\n        router.pathname\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        promiseAllPublicApi();\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (mainData.user.data !== null) {\n            promiseAllApi();\n        }\n    }, [\n        mainData.user.data\n    ]);\n    const loginApi = async (param)=>{\n        let { email, password } = param;\n        try {\n            const { data, error } = await _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.auth.signInWithPassword({\n                email: email,\n                password: password\n            });\n            if (error) {\n                if (error.message === \"Email not confirmed\") {\n                    react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(\"Your email confirmation is pending, please check your inbox for the confirmation link.\");\n                } else {\n                    throw error;\n                }\n            }\n            return data === null || data === void 0 ? void 0 : data.user;\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n        }\n    };\n    const signUpApi = async (param)=>{\n        let { username, email, password } = param;\n        try {\n            const { data, error } = await _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.auth.signUp({\n                email: email,\n                password: password,\n                options: {\n                    emailRedirectTo: \"https://gikijo/dashboard\",\n                    data: {\n                        name: username\n                    }\n                }\n            });\n            if (error) {\n                throw error;\n            }\n            if (data.user && data.user.identities && data.user.identities.length === 0) {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(\"User already exists!\");\n                return;\n            }\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].success(\"Thanks for signing up! please check your email to complete your registration.\", {\n                duration: 6000\n            });\n            return data;\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n        }\n    };\n    const resetPasswordApi = async (param)=>{\n        let { currentEmail } = param;\n        try {\n            const { data, error } = await _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.auth.resetPasswordForEmail(currentEmail, {\n                redirectTo: \"https://gikijo/changePassword\"\n            });\n            if (error) {\n                throw error;\n            }\n            return data;\n        } catch (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n        }\n    };\n    const logoutApi = async ()=>{\n        const { error } = await _utils_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.auth.signOut();\n        if (error) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(error.message);\n        } else {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].success(\"You have been logged out.\");\n            router.push(_utils_constants__WEBPACK_IMPORTED_MODULE_5__.PAGES.home.directory);\n            resetData();\n        }\n    };\n    const clearData = async ()=>{\n        router.push(_utils_constants__WEBPACK_IMPORTED_MODULE_5__.PAGES.home.directory);\n        resetData();\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ApiCallContext.Provider, {\n        value: {\n            apiData: mainData,\n            clearData,\n            loginApi,\n            signUpApi,\n            resetPasswordApi,\n            logoutApi,\n            getTopJobPostApi,\n            getTopCompanyApi,\n            getAllJobPostApi,\n            getProfileApi,\n            addNotificationApi,\n            updateNotificationApi,\n            getJobPostApi,\n            addJobPostApi,\n            editJobPostApi,\n            deleteJobPostApi,\n            publishJobPostApi,\n            applyJobPostApi,\n            getCompanyProfileApi,\n            addCompanyProfileApi,\n            editApplicationApi,\n            getJobDetailsApi,\n            getResumeDetailsApi,\n            getSingleCompanyProfileApi,\n            updatePasswordApi,\n            deleteAccountApi,\n            getResumeApi,\n            addResumeApi,\n            setMainData,\n            updateProfileApi,\n            updateAccountTypeApi,\n            updateOnboardingApi,\n            updateProductTourApi,\n            getApplicationApi,\n            createStripeCustomerApi,\n            createStripeCheckoutSessionApi,\n            addJobAlertApi\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/hafizhizers/Documents/GitHub/gikijo_v2_fork/context/apiCall.js\",\n        lineNumber: 1345,\n        columnNumber: 5\n    }, undefined);\n};\n_s1(ApiCallProvider, \"hlSYzd5NvouuKTmyQUJrlSHUpuw=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_7__.usePathname,\n        next_router__WEBPACK_IMPORTED_MODULE_4__.useRouter\n    ];\n});\n_c = ApiCallProvider;\nvar _c;\n$RefreshReg$(_c, \"ApiCallProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./context/apiCall.js\n"));

/***/ })

});